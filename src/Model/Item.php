<?php
/**
 * Item
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  macropage\SDKs\ebay\rest\browse
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Browse API
 *
 * <p>The Browse API has the following resources:</p>   <ul> <li><b> item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values.</li>  <li><b> search_by_image: </b><a href=\"https://developer.ebay.com/api-docs/static/versioning.html#experimental\" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Release\" title=\"Experimental Release\" />&nbsp;(Experimental)</a> Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters.</li>   <li><b> item: </b> <ul><li>Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.</li> <li>Provides a bridge between the eBay legacy APIs, such as <b> Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li>  </ul> </li>  <li> <b> shopping_cart: </b> <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#experimental\" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Release\" title=\"Experimental Release\" />&nbsp;(Experimental)</a> <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp;<b> Note: </b> This resource is not available in the eBay API Explorer.</li></ul>       <p>The <b> item_summary</b>, <b> search_by_image</b>, and <b> item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>. The <b> shopping_cart</b> resource calls require a <a href=\"/api-docs/static/oauth-authorization-code-grant.html\">User access token</a>.</p>
 *
 * The version of the OpenAPI document: v1.11.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace macropage\SDKs\ebay\rest\browse\Model;

use \ArrayAccess;
use \macropage\SDKs\ebay\rest\browse\ObjectSerializer;

/**
 * Item Class Doc Comment
 *
 * @category Class
 * @description The details of an item that can be purchased.
 * @package  macropage\SDKs\ebay\rest\browse
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Item implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Item';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'additionalImages' => '\macropage\SDKs\ebay\rest\browse\Model\Image[]',
        'adultOnly' => 'bool',
        'ageGroup' => 'string',
        'authenticityGuarantee' => '\macropage\SDKs\ebay\rest\browse\Model\AuthenticityGuaranteeProgram',
        'authenticityVerification' => '\macropage\SDKs\ebay\rest\browse\Model\AuthenticityVerificationProgram',
        'availableCoupons' => '\macropage\SDKs\ebay\rest\browse\Model\AvailableCoupon[]',
        'bidCount' => 'int',
        'brand' => 'string',
        'buyingOptions' => 'string[]',
        'categoryId' => 'string',
        'categoryPath' => 'string',
        'color' => 'string',
        'condition' => 'string',
        'conditionDescription' => 'string',
        'conditionId' => 'string',
        'currentBidPrice' => '\macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount',
        'description' => 'string',
        'ecoParticipationFee' => '\macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount',
        'eligibleForInlineCheckout' => 'bool',
        'enabledForGuestCheckout' => 'bool',
        'energyEfficiencyClass' => 'string',
        'epid' => 'string',
        'estimatedAvailabilities' => '\macropage\SDKs\ebay\rest\browse\Model\EstimatedAvailability[]',
        'gender' => 'string',
        'gtin' => 'string',
        'image' => '\macropage\SDKs\ebay\rest\browse\Model\Image',
        'inferredEpid' => 'string',
        'itemAffiliateWebUrl' => 'string',
        'itemEndDate' => 'string',
        'itemId' => 'string',
        'itemLocation' => '\macropage\SDKs\ebay\rest\browse\Model\Address',
        'itemWebUrl' => 'string',
        'legacyItemId' => 'string',
        'localizedAspects' => '\macropage\SDKs\ebay\rest\browse\Model\TypedNameValue[]',
        'lotSize' => 'int',
        'marketingPrice' => '\macropage\SDKs\ebay\rest\browse\Model\MarketingPrice',
        'material' => 'string',
        'minimumPriceToBid' => '\macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount',
        'mpn' => 'string',
        'pattern' => 'string',
        'paymentMethods' => '\macropage\SDKs\ebay\rest\browse\Model\PaymentMethod[]',
        'price' => '\macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount',
        'priceDisplayCondition' => 'string',
        'primaryItemGroup' => '\macropage\SDKs\ebay\rest\browse\Model\ItemGroupSummary',
        'primaryProductReviewRating' => '\macropage\SDKs\ebay\rest\browse\Model\ReviewRating',
        'priorityListing' => 'bool',
        'product' => '\macropage\SDKs\ebay\rest\browse\Model\Product',
        'productFicheWebUrl' => 'string',
        'qualifiedPrograms' => 'string[]',
        'quantityLimitPerBuyer' => 'int',
        'reservePriceMet' => 'bool',
        'returnTerms' => '\macropage\SDKs\ebay\rest\browse\Model\ItemReturnTerms',
        'seller' => '\macropage\SDKs\ebay\rest\browse\Model\SellerDetail',
        'sellerCustomPolicies' => '\macropage\SDKs\ebay\rest\browse\Model\SellerCustomPolicy[]',
        'sellerItemRevision' => 'string',
        'shippingOptions' => '\macropage\SDKs\ebay\rest\browse\Model\ShippingOption[]',
        'shipToLocations' => '\macropage\SDKs\ebay\rest\browse\Model\ShipToLocations',
        'shortDescription' => 'string',
        'size' => 'string',
        'sizeSystem' => 'string',
        'sizeType' => 'string',
        'subtitle' => 'string',
        'taxes' => '\macropage\SDKs\ebay\rest\browse\Model\Taxes[]',
        'title' => 'string',
        'topRatedBuyingExperience' => 'bool',
        'tyreLabelImageUrl' => 'string',
        'uniqueBidderCount' => 'int',
        'unitPrice' => '\macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount',
        'unitPricingMeasure' => 'string',
        'warnings' => '\macropage\SDKs\ebay\rest\browse\Model\Error[]',
        'watchCount' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'additionalImages' => null,
        'adultOnly' => null,
        'ageGroup' => null,
        'authenticityGuarantee' => null,
        'authenticityVerification' => null,
        'availableCoupons' => null,
        'bidCount' => 'int32',
        'brand' => null,
        'buyingOptions' => null,
        'categoryId' => null,
        'categoryPath' => null,
        'color' => null,
        'condition' => null,
        'conditionDescription' => null,
        'conditionId' => null,
        'currentBidPrice' => null,
        'description' => null,
        'ecoParticipationFee' => null,
        'eligibleForInlineCheckout' => null,
        'enabledForGuestCheckout' => null,
        'energyEfficiencyClass' => null,
        'epid' => null,
        'estimatedAvailabilities' => null,
        'gender' => null,
        'gtin' => null,
        'image' => null,
        'inferredEpid' => null,
        'itemAffiliateWebUrl' => null,
        'itemEndDate' => null,
        'itemId' => null,
        'itemLocation' => null,
        'itemWebUrl' => null,
        'legacyItemId' => null,
        'localizedAspects' => null,
        'lotSize' => 'int32',
        'marketingPrice' => null,
        'material' => null,
        'minimumPriceToBid' => null,
        'mpn' => null,
        'pattern' => null,
        'paymentMethods' => null,
        'price' => null,
        'priceDisplayCondition' => null,
        'primaryItemGroup' => null,
        'primaryProductReviewRating' => null,
        'priorityListing' => null,
        'product' => null,
        'productFicheWebUrl' => null,
        'qualifiedPrograms' => null,
        'quantityLimitPerBuyer' => 'int32',
        'reservePriceMet' => null,
        'returnTerms' => null,
        'seller' => null,
        'sellerCustomPolicies' => null,
        'sellerItemRevision' => null,
        'shippingOptions' => null,
        'shipToLocations' => null,
        'shortDescription' => null,
        'size' => null,
        'sizeSystem' => null,
        'sizeType' => null,
        'subtitle' => null,
        'taxes' => null,
        'title' => null,
        'topRatedBuyingExperience' => null,
        'tyreLabelImageUrl' => null,
        'uniqueBidderCount' => 'int32',
        'unitPrice' => null,
        'unitPricingMeasure' => null,
        'warnings' => null,
        'watchCount' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'additionalImages' => 'additionalImages',
        'adultOnly' => 'adultOnly',
        'ageGroup' => 'ageGroup',
        'authenticityGuarantee' => 'authenticityGuarantee',
        'authenticityVerification' => 'authenticityVerification',
        'availableCoupons' => 'availableCoupons',
        'bidCount' => 'bidCount',
        'brand' => 'brand',
        'buyingOptions' => 'buyingOptions',
        'categoryId' => 'categoryId',
        'categoryPath' => 'categoryPath',
        'color' => 'color',
        'condition' => 'condition',
        'conditionDescription' => 'conditionDescription',
        'conditionId' => 'conditionId',
        'currentBidPrice' => 'currentBidPrice',
        'description' => 'description',
        'ecoParticipationFee' => 'ecoParticipationFee',
        'eligibleForInlineCheckout' => 'eligibleForInlineCheckout',
        'enabledForGuestCheckout' => 'enabledForGuestCheckout',
        'energyEfficiencyClass' => 'energyEfficiencyClass',
        'epid' => 'epid',
        'estimatedAvailabilities' => 'estimatedAvailabilities',
        'gender' => 'gender',
        'gtin' => 'gtin',
        'image' => 'image',
        'inferredEpid' => 'inferredEpid',
        'itemAffiliateWebUrl' => 'itemAffiliateWebUrl',
        'itemEndDate' => 'itemEndDate',
        'itemId' => 'itemId',
        'itemLocation' => 'itemLocation',
        'itemWebUrl' => 'itemWebUrl',
        'legacyItemId' => 'legacyItemId',
        'localizedAspects' => 'localizedAspects',
        'lotSize' => 'lotSize',
        'marketingPrice' => 'marketingPrice',
        'material' => 'material',
        'minimumPriceToBid' => 'minimumPriceToBid',
        'mpn' => 'mpn',
        'pattern' => 'pattern',
        'paymentMethods' => 'paymentMethods',
        'price' => 'price',
        'priceDisplayCondition' => 'priceDisplayCondition',
        'primaryItemGroup' => 'primaryItemGroup',
        'primaryProductReviewRating' => 'primaryProductReviewRating',
        'priorityListing' => 'priorityListing',
        'product' => 'product',
        'productFicheWebUrl' => 'productFicheWebUrl',
        'qualifiedPrograms' => 'qualifiedPrograms',
        'quantityLimitPerBuyer' => 'quantityLimitPerBuyer',
        'reservePriceMet' => 'reservePriceMet',
        'returnTerms' => 'returnTerms',
        'seller' => 'seller',
        'sellerCustomPolicies' => 'sellerCustomPolicies',
        'sellerItemRevision' => 'sellerItemRevision',
        'shippingOptions' => 'shippingOptions',
        'shipToLocations' => 'shipToLocations',
        'shortDescription' => 'shortDescription',
        'size' => 'size',
        'sizeSystem' => 'sizeSystem',
        'sizeType' => 'sizeType',
        'subtitle' => 'subtitle',
        'taxes' => 'taxes',
        'title' => 'title',
        'topRatedBuyingExperience' => 'topRatedBuyingExperience',
        'tyreLabelImageUrl' => 'tyreLabelImageUrl',
        'uniqueBidderCount' => 'uniqueBidderCount',
        'unitPrice' => 'unitPrice',
        'unitPricingMeasure' => 'unitPricingMeasure',
        'warnings' => 'warnings',
        'watchCount' => 'watchCount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'additionalImages' => 'setAdditionalImages',
        'adultOnly' => 'setAdultOnly',
        'ageGroup' => 'setAgeGroup',
        'authenticityGuarantee' => 'setAuthenticityGuarantee',
        'authenticityVerification' => 'setAuthenticityVerification',
        'availableCoupons' => 'setAvailableCoupons',
        'bidCount' => 'setBidCount',
        'brand' => 'setBrand',
        'buyingOptions' => 'setBuyingOptions',
        'categoryId' => 'setCategoryId',
        'categoryPath' => 'setCategoryPath',
        'color' => 'setColor',
        'condition' => 'setCondition',
        'conditionDescription' => 'setConditionDescription',
        'conditionId' => 'setConditionId',
        'currentBidPrice' => 'setCurrentBidPrice',
        'description' => 'setDescription',
        'ecoParticipationFee' => 'setEcoParticipationFee',
        'eligibleForInlineCheckout' => 'setEligibleForInlineCheckout',
        'enabledForGuestCheckout' => 'setEnabledForGuestCheckout',
        'energyEfficiencyClass' => 'setEnergyEfficiencyClass',
        'epid' => 'setEpid',
        'estimatedAvailabilities' => 'setEstimatedAvailabilities',
        'gender' => 'setGender',
        'gtin' => 'setGtin',
        'image' => 'setImage',
        'inferredEpid' => 'setInferredEpid',
        'itemAffiliateWebUrl' => 'setItemAffiliateWebUrl',
        'itemEndDate' => 'setItemEndDate',
        'itemId' => 'setItemId',
        'itemLocation' => 'setItemLocation',
        'itemWebUrl' => 'setItemWebUrl',
        'legacyItemId' => 'setLegacyItemId',
        'localizedAspects' => 'setLocalizedAspects',
        'lotSize' => 'setLotSize',
        'marketingPrice' => 'setMarketingPrice',
        'material' => 'setMaterial',
        'minimumPriceToBid' => 'setMinimumPriceToBid',
        'mpn' => 'setMpn',
        'pattern' => 'setPattern',
        'paymentMethods' => 'setPaymentMethods',
        'price' => 'setPrice',
        'priceDisplayCondition' => 'setPriceDisplayCondition',
        'primaryItemGroup' => 'setPrimaryItemGroup',
        'primaryProductReviewRating' => 'setPrimaryProductReviewRating',
        'priorityListing' => 'setPriorityListing',
        'product' => 'setProduct',
        'productFicheWebUrl' => 'setProductFicheWebUrl',
        'qualifiedPrograms' => 'setQualifiedPrograms',
        'quantityLimitPerBuyer' => 'setQuantityLimitPerBuyer',
        'reservePriceMet' => 'setReservePriceMet',
        'returnTerms' => 'setReturnTerms',
        'seller' => 'setSeller',
        'sellerCustomPolicies' => 'setSellerCustomPolicies',
        'sellerItemRevision' => 'setSellerItemRevision',
        'shippingOptions' => 'setShippingOptions',
        'shipToLocations' => 'setShipToLocations',
        'shortDescription' => 'setShortDescription',
        'size' => 'setSize',
        'sizeSystem' => 'setSizeSystem',
        'sizeType' => 'setSizeType',
        'subtitle' => 'setSubtitle',
        'taxes' => 'setTaxes',
        'title' => 'setTitle',
        'topRatedBuyingExperience' => 'setTopRatedBuyingExperience',
        'tyreLabelImageUrl' => 'setTyreLabelImageUrl',
        'uniqueBidderCount' => 'setUniqueBidderCount',
        'unitPrice' => 'setUnitPrice',
        'unitPricingMeasure' => 'setUnitPricingMeasure',
        'warnings' => 'setWarnings',
        'watchCount' => 'setWatchCount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'additionalImages' => 'getAdditionalImages',
        'adultOnly' => 'getAdultOnly',
        'ageGroup' => 'getAgeGroup',
        'authenticityGuarantee' => 'getAuthenticityGuarantee',
        'authenticityVerification' => 'getAuthenticityVerification',
        'availableCoupons' => 'getAvailableCoupons',
        'bidCount' => 'getBidCount',
        'brand' => 'getBrand',
        'buyingOptions' => 'getBuyingOptions',
        'categoryId' => 'getCategoryId',
        'categoryPath' => 'getCategoryPath',
        'color' => 'getColor',
        'condition' => 'getCondition',
        'conditionDescription' => 'getConditionDescription',
        'conditionId' => 'getConditionId',
        'currentBidPrice' => 'getCurrentBidPrice',
        'description' => 'getDescription',
        'ecoParticipationFee' => 'getEcoParticipationFee',
        'eligibleForInlineCheckout' => 'getEligibleForInlineCheckout',
        'enabledForGuestCheckout' => 'getEnabledForGuestCheckout',
        'energyEfficiencyClass' => 'getEnergyEfficiencyClass',
        'epid' => 'getEpid',
        'estimatedAvailabilities' => 'getEstimatedAvailabilities',
        'gender' => 'getGender',
        'gtin' => 'getGtin',
        'image' => 'getImage',
        'inferredEpid' => 'getInferredEpid',
        'itemAffiliateWebUrl' => 'getItemAffiliateWebUrl',
        'itemEndDate' => 'getItemEndDate',
        'itemId' => 'getItemId',
        'itemLocation' => 'getItemLocation',
        'itemWebUrl' => 'getItemWebUrl',
        'legacyItemId' => 'getLegacyItemId',
        'localizedAspects' => 'getLocalizedAspects',
        'lotSize' => 'getLotSize',
        'marketingPrice' => 'getMarketingPrice',
        'material' => 'getMaterial',
        'minimumPriceToBid' => 'getMinimumPriceToBid',
        'mpn' => 'getMpn',
        'pattern' => 'getPattern',
        'paymentMethods' => 'getPaymentMethods',
        'price' => 'getPrice',
        'priceDisplayCondition' => 'getPriceDisplayCondition',
        'primaryItemGroup' => 'getPrimaryItemGroup',
        'primaryProductReviewRating' => 'getPrimaryProductReviewRating',
        'priorityListing' => 'getPriorityListing',
        'product' => 'getProduct',
        'productFicheWebUrl' => 'getProductFicheWebUrl',
        'qualifiedPrograms' => 'getQualifiedPrograms',
        'quantityLimitPerBuyer' => 'getQuantityLimitPerBuyer',
        'reservePriceMet' => 'getReservePriceMet',
        'returnTerms' => 'getReturnTerms',
        'seller' => 'getSeller',
        'sellerCustomPolicies' => 'getSellerCustomPolicies',
        'sellerItemRevision' => 'getSellerItemRevision',
        'shippingOptions' => 'getShippingOptions',
        'shipToLocations' => 'getShipToLocations',
        'shortDescription' => 'getShortDescription',
        'size' => 'getSize',
        'sizeSystem' => 'getSizeSystem',
        'sizeType' => 'getSizeType',
        'subtitle' => 'getSubtitle',
        'taxes' => 'getTaxes',
        'title' => 'getTitle',
        'topRatedBuyingExperience' => 'getTopRatedBuyingExperience',
        'tyreLabelImageUrl' => 'getTyreLabelImageUrl',
        'uniqueBidderCount' => 'getUniqueBidderCount',
        'unitPrice' => 'getUnitPrice',
        'unitPricingMeasure' => 'getUnitPricingMeasure',
        'warnings' => 'getWarnings',
        'watchCount' => 'getWatchCount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['additionalImages'] = $data['additionalImages'] ?? null;
        $this->container['adultOnly'] = $data['adultOnly'] ?? null;
        $this->container['ageGroup'] = $data['ageGroup'] ?? null;
        $this->container['authenticityGuarantee'] = $data['authenticityGuarantee'] ?? null;
        $this->container['authenticityVerification'] = $data['authenticityVerification'] ?? null;
        $this->container['availableCoupons'] = $data['availableCoupons'] ?? null;
        $this->container['bidCount'] = $data['bidCount'] ?? null;
        $this->container['brand'] = $data['brand'] ?? null;
        $this->container['buyingOptions'] = $data['buyingOptions'] ?? null;
        $this->container['categoryId'] = $data['categoryId'] ?? null;
        $this->container['categoryPath'] = $data['categoryPath'] ?? null;
        $this->container['color'] = $data['color'] ?? null;
        $this->container['condition'] = $data['condition'] ?? null;
        $this->container['conditionDescription'] = $data['conditionDescription'] ?? null;
        $this->container['conditionId'] = $data['conditionId'] ?? null;
        $this->container['currentBidPrice'] = $data['currentBidPrice'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['ecoParticipationFee'] = $data['ecoParticipationFee'] ?? null;
        $this->container['eligibleForInlineCheckout'] = $data['eligibleForInlineCheckout'] ?? null;
        $this->container['enabledForGuestCheckout'] = $data['enabledForGuestCheckout'] ?? null;
        $this->container['energyEfficiencyClass'] = $data['energyEfficiencyClass'] ?? null;
        $this->container['epid'] = $data['epid'] ?? null;
        $this->container['estimatedAvailabilities'] = $data['estimatedAvailabilities'] ?? null;
        $this->container['gender'] = $data['gender'] ?? null;
        $this->container['gtin'] = $data['gtin'] ?? null;
        $this->container['image'] = $data['image'] ?? null;
        $this->container['inferredEpid'] = $data['inferredEpid'] ?? null;
        $this->container['itemAffiliateWebUrl'] = $data['itemAffiliateWebUrl'] ?? null;
        $this->container['itemEndDate'] = $data['itemEndDate'] ?? null;
        $this->container['itemId'] = $data['itemId'] ?? null;
        $this->container['itemLocation'] = $data['itemLocation'] ?? null;
        $this->container['itemWebUrl'] = $data['itemWebUrl'] ?? null;
        $this->container['legacyItemId'] = $data['legacyItemId'] ?? null;
        $this->container['localizedAspects'] = $data['localizedAspects'] ?? null;
        $this->container['lotSize'] = $data['lotSize'] ?? null;
        $this->container['marketingPrice'] = $data['marketingPrice'] ?? null;
        $this->container['material'] = $data['material'] ?? null;
        $this->container['minimumPriceToBid'] = $data['minimumPriceToBid'] ?? null;
        $this->container['mpn'] = $data['mpn'] ?? null;
        $this->container['pattern'] = $data['pattern'] ?? null;
        $this->container['paymentMethods'] = $data['paymentMethods'] ?? null;
        $this->container['price'] = $data['price'] ?? null;
        $this->container['priceDisplayCondition'] = $data['priceDisplayCondition'] ?? null;
        $this->container['primaryItemGroup'] = $data['primaryItemGroup'] ?? null;
        $this->container['primaryProductReviewRating'] = $data['primaryProductReviewRating'] ?? null;
        $this->container['priorityListing'] = $data['priorityListing'] ?? null;
        $this->container['product'] = $data['product'] ?? null;
        $this->container['productFicheWebUrl'] = $data['productFicheWebUrl'] ?? null;
        $this->container['qualifiedPrograms'] = $data['qualifiedPrograms'] ?? null;
        $this->container['quantityLimitPerBuyer'] = $data['quantityLimitPerBuyer'] ?? null;
        $this->container['reservePriceMet'] = $data['reservePriceMet'] ?? null;
        $this->container['returnTerms'] = $data['returnTerms'] ?? null;
        $this->container['seller'] = $data['seller'] ?? null;
        $this->container['sellerCustomPolicies'] = $data['sellerCustomPolicies'] ?? null;
        $this->container['sellerItemRevision'] = $data['sellerItemRevision'] ?? null;
        $this->container['shippingOptions'] = $data['shippingOptions'] ?? null;
        $this->container['shipToLocations'] = $data['shipToLocations'] ?? null;
        $this->container['shortDescription'] = $data['shortDescription'] ?? null;
        $this->container['size'] = $data['size'] ?? null;
        $this->container['sizeSystem'] = $data['sizeSystem'] ?? null;
        $this->container['sizeType'] = $data['sizeType'] ?? null;
        $this->container['subtitle'] = $data['subtitle'] ?? null;
        $this->container['taxes'] = $data['taxes'] ?? null;
        $this->container['title'] = $data['title'] ?? null;
        $this->container['topRatedBuyingExperience'] = $data['topRatedBuyingExperience'] ?? null;
        $this->container['tyreLabelImageUrl'] = $data['tyreLabelImageUrl'] ?? null;
        $this->container['uniqueBidderCount'] = $data['uniqueBidderCount'] ?? null;
        $this->container['unitPrice'] = $data['unitPrice'] ?? null;
        $this->container['unitPricingMeasure'] = $data['unitPricingMeasure'] ?? null;
        $this->container['warnings'] = $data['warnings'] ?? null;
        $this->container['watchCount'] = $data['watchCount'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets additionalImages
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\Image[]|null
     */
    public function getAdditionalImages()
    {
        return $this->container['additionalImages'];
    }

    /**
     * Sets additionalImages
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\Image[]|null $additionalImages An array of containers with the URLs for the images that are in addition to the primary image.  The primary image is returned in the <b> image.imageUrl</b> field.
     *
     * @return self
     */
    public function setAdditionalImages($additionalImages)
    {
        $this->container['additionalImages'] = $additionalImages;

        return $this;
    }

    /**
     * Gets adultOnly
     *
     * @return bool|null
     */
    public function getAdultOnly()
    {
        return $this->container['adultOnly'];
    }

    /**
     * Sets adultOnly
     *
     * @param bool|null $adultOnly This indicates if the item is for  adults only. For more information about adult-only items on eBay, see <a href=\"https://pages.ebay.com/help/policies/adult-only.html\" target=\"_blank\">Adult items policy</a> for sellers and <a href=\"https://www.ebay.com/help/terms-conditions/default/searching-adult-items?id=4661\" target=\"_blank\">Adult-Only items on eBay</a> for buyers.
     *
     * @return self
     */
    public function setAdultOnly($adultOnly)
    {
        $this->container['adultOnly'] = $adultOnly;

        return $this;
    }

    /**
     * Gets ageGroup
     *
     * @return string|null
     */
    public function getAgeGroup()
    {
        return $this->container['ageGroup'];
    }

    /**
     * Sets ageGroup
     *
     * @param string|null $ageGroup (Primary Item Aspect) The age group for which the product is recommended. For example, newborn, infant, toddler, kids, adult, etc. All the item aspects, including this aspect, are returned in the <b> localizedAspects</b> container.
     *
     * @return self
     */
    public function setAgeGroup($ageGroup)
    {
        $this->container['ageGroup'] = $ageGroup;

        return $this;
    }

    /**
     * Gets authenticityGuarantee
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\AuthenticityGuaranteeProgram|null
     */
    public function getAuthenticityGuarantee()
    {
        return $this->container['authenticityGuarantee'];
    }

    /**
     * Sets authenticityGuarantee
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\AuthenticityGuaranteeProgram|null $authenticityGuarantee authenticityGuarantee
     *
     * @return self
     */
    public function setAuthenticityGuarantee($authenticityGuarantee)
    {
        $this->container['authenticityGuarantee'] = $authenticityGuarantee;

        return $this;
    }

    /**
     * Gets authenticityVerification
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\AuthenticityVerificationProgram|null
     */
    public function getAuthenticityVerification()
    {
        return $this->container['authenticityVerification'];
    }

    /**
     * Sets authenticityVerification
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\AuthenticityVerificationProgram|null $authenticityVerification authenticityVerification
     *
     * @return self
     */
    public function setAuthenticityVerification($authenticityVerification)
    {
        $this->container['authenticityVerification'] = $authenticityVerification;

        return $this;
    }

    /**
     * Gets availableCoupons
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\AvailableCoupon[]|null
     */
    public function getAvailableCoupons()
    {
        return $this->container['availableCoupons'];
    }

    /**
     * Sets availableCoupons
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\AvailableCoupon[]|null $availableCoupons A list of available coupons for the item.
     *
     * @return self
     */
    public function setAvailableCoupons($availableCoupons)
    {
        $this->container['availableCoupons'] = $availableCoupons;

        return $this;
    }

    /**
     * Gets bidCount
     *
     * @return int|null
     */
    public function getBidCount()
    {
        return $this->container['bidCount'];
    }

    /**
     * Sets bidCount
     *
     * @param int|null $bidCount This integer value indicates the total number of bids that have been placed against an auction item. This field is returned only for auction items.
     *
     * @return self
     */
    public function setBidCount($bidCount)
    {
        $this->container['bidCount'] = $bidCount;

        return $this;
    }

    /**
     * Gets brand
     *
     * @return string|null
     */
    public function getBrand()
    {
        return $this->container['brand'];
    }

    /**
     * Sets brand
     *
     * @param string|null $brand (Primary Item Aspect) The name brand of the item, such as Nike, Apple, etc.  All the item aspects, including this aspect, are returned in the <b> localizedAspects</b> container.
     *
     * @return self
     */
    public function setBrand($brand)
    {
        $this->container['brand'] = $brand;

        return $this;
    }

    /**
     * Gets buyingOptions
     *
     * @return string[]|null
     */
    public function getBuyingOptions()
    {
        return $this->container['buyingOptions'];
    }

    /**
     * Sets buyingOptions
     *
     * @param string[]|null $buyingOptions A comma separated list of all the purchase options available for the item. The values returned are:  <ul> <li><code>FIXED_PRICE</code> - Indicates the buyer can purchase the item for a set price using the Buy It Now button. </li>  <li><code>AUCTION</code> - Indicates the buyer can place a bid for the item. After the first bid is placed, this becomes a live auction item and is the only buying option for this item.</li>  <li><code>BEST_OFFER</code> - Indicates the buyer can send the seller a price they're willing to pay for the item. The seller can accept, reject, or send a counter offer. For more information on how this works, see <a href=\"https://www.ebay.com/help/buying/buy-now/making-best-offer?id=4019\">Making a Best Offer</a>.</li> </ul> Code so that your app gracefully handles any future changes to this list.
     *
     * @return self
     */
    public function setBuyingOptions($buyingOptions)
    {
        $this->container['buyingOptions'] = $buyingOptions;

        return $this;
    }

    /**
     * Gets categoryId
     *
     * @return string|null
     */
    public function getCategoryId()
    {
        return $this->container['categoryId'];
    }

    /**
     * Sets categoryId
     *
     * @param string|null $categoryId The ID of the leaf category for this item. A leaf category is the lowest level in that category and has no children.
     *
     * @return self
     */
    public function setCategoryId($categoryId)
    {
        $this->container['categoryId'] = $categoryId;

        return $this;
    }

    /**
     * Gets categoryPath
     *
     * @return string|null
     */
    public function getCategoryPath()
    {
        return $this->container['categoryPath'];
    }

    /**
     * Sets categoryPath
     *
     * @param string|null $categoryPath Text that shows the category hierarchy of the item. For example: Computers/Tablets &amp; Networking, Laptops &amp; Netbooks, PC Laptops &amp; Netbooks
     *
     * @return self
     */
    public function setCategoryPath($categoryPath)
    {
        $this->container['categoryPath'] = $categoryPath;

        return $this;
    }

    /**
     * Gets color
     *
     * @return string|null
     */
    public function getColor()
    {
        return $this->container['color'];
    }

    /**
     * Sets color
     *
     * @param string|null $color (Primary Item Aspect) Text describing the color of the item.  All the item aspects, including this aspect, are returned in the <b> localizedAspects</b> container.
     *
     * @return self
     */
    public function setColor($color)
    {
        $this->container['color'] = $color;

        return $this;
    }

    /**
     * Gets condition
     *
     * @return string|null
     */
    public function getCondition()
    {
        return $this->container['condition'];
    }

    /**
     * Sets condition
     *
     * @param string|null $condition A short text description for the condition of the item, such as New or Used. For a list of condition names, see <a href=\"https://developer.ebay.com/devzone/finding/callref/enums/conditionIdList.html\" target=\"_blank\">Item Condition IDs and Names</a>.  <br /><br />Code so that your app gracefully handles any future changes to this list. <br /><br /><span class=\"tablenote\"><b> Note: </b>As of September 1, 2021, condition ID 2500 ('Seller Refurbished') is no longer a valid item condition in the <b>Cell Phones & Smartphones</b> category (category ID 9355) for the following marketplaces: US, Canada, UK, Germany, and Australia. This refurbished item condition has been replaced by three new refurbished values, which include 'Excellent - Refurbished' (condition ID 2010), 'Very Good - Refurbished' (condition ID 2020), and 'Good - Refurbished' (condition ID 2030).</span>
     *
     * @return self
     */
    public function setCondition($condition)
    {
        $this->container['condition'] = $condition;

        return $this;
    }

    /**
     * Gets conditionDescription
     *
     * @return string|null
     */
    public function getConditionDescription()
    {
        return $this->container['conditionDescription'];
    }

    /**
     * Sets conditionDescription
     *
     * @param string|null $conditionDescription A full text description for the condition of the item. This field elaborates on the value specified in the <b>condition</b> field and provides full details for the condition of the item. <br /><br /><span class=\"tablenote\"><b> Note: </b>As of September 1, 2021, condition ID 2500 ('Seller Refurbished') is no longer a valid item condition in the <b>Cell Phones & Smartphones</b> category (category ID 9355) for the following marketplaces: US, Canada, UK, Germany, and Australia. This refurbished item condition has been replaced by three new refurbished values, which include 'Excellent - Refurbished' (condition ID 2010), 'Very Good - Refurbished' (condition ID 2020), and 'Good - Refurbished' (condition ID 2030).</span>
     *
     * @return self
     */
    public function setConditionDescription($conditionDescription)
    {
        $this->container['conditionDescription'] = $conditionDescription;

        return $this;
    }

    /**
     * Gets conditionId
     *
     * @return string|null
     */
    public function getConditionId()
    {
        return $this->container['conditionId'];
    }

    /**
     * Sets conditionId
     *
     * @param string|null $conditionId The identifier of the condition of the item. For example, 1000 is the identifier for NEW. For a list of condition names and IDs, see <a href=\"https://developer.ebay.com/devzone/finding/callref/enums/conditionIdList.html\" target=\"_blank\">Item Condition IDs and Names</a>. <br /><br />Code so that your app gracefully handles any future changes to this list. <br /><br /><span class=\"tablenote\"><b> Note: </b>As of September 1, 2021, condition ID 2500 ('Seller Refurbished') is no longer a valid item condition in the <b>Cell Phones & Smartphones</b> category (category ID 9355) for the following marketplaces: US, Canada, UK, Germany, and Australia. This refurbished item condition has been replaced by three new refurbished values, which include 'Excellent - Refurbished' (condition ID 2010), 'Very Good - Refurbished' (condition ID 2020), and 'Good - Refurbished' (condition ID 2030).</span>
     *
     * @return self
     */
    public function setConditionId($conditionId)
    {
        $this->container['conditionId'] = $conditionId;

        return $this;
    }

    /**
     * Gets currentBidPrice
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null
     */
    public function getCurrentBidPrice()
    {
        return $this->container['currentBidPrice'];
    }

    /**
     * Sets currentBidPrice
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null $currentBidPrice currentBidPrice
     *
     * @return self
     */
    public function setCurrentBidPrice($currentBidPrice)
    {
        $this->container['currentBidPrice'] = $currentBidPrice;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description The full description of the item that was created by the seller. This can be plain text or rich content and can be very large.
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets ecoParticipationFee
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null
     */
    public function getEcoParticipationFee()
    {
        return $this->container['ecoParticipationFee'];
    }

    /**
     * Sets ecoParticipationFee
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null $ecoParticipationFee ecoParticipationFee
     *
     * @return self
     */
    public function setEcoParticipationFee($ecoParticipationFee)
    {
        $this->container['ecoParticipationFee'] = $ecoParticipationFee;

        return $this;
    }

    /**
     * Gets eligibleForInlineCheckout
     *
     * @return bool|null
     */
    public function getEligibleForInlineCheckout()
    {
        return $this->container['eligibleForInlineCheckout'];
    }

    /**
     * Sets eligibleForInlineCheckout
     *
     * @param bool|null $eligibleForInlineCheckout This field indicates if the item can be purchased using the Buy <a href=\"/api-docs/buy/order/resources/methods\">Order API</a>. <ul> <li>If the value of this field is <code>true</code>, this indicates that the item can be purchased using the <b> Order API</b>. </li>  <li>If the value of this field is <code>false</code>, this indicates that the item cannot be purchased using the <b> Order API</b> and must be purchased on the eBay site.</li> </ul>
     *
     * @return self
     */
    public function setEligibleForInlineCheckout($eligibleForInlineCheckout)
    {
        $this->container['eligibleForInlineCheckout'] = $eligibleForInlineCheckout;

        return $this;
    }

    /**
     * Gets enabledForGuestCheckout
     *
     * @return bool|null
     */
    public function getEnabledForGuestCheckout()
    {
        return $this->container['enabledForGuestCheckout'];
    }

    /**
     * Sets enabledForGuestCheckout
     *
     * @param bool|null $enabledForGuestCheckout This indicates if the item can be purchased using Guest Checkout in the <a href=\"/api-docs/buy/order/resources/methods\">Order API</a>. You can use this flag to exclude items from your inventory that are not eligible for Guest Checkout, such as gift cards.
     *
     * @return self
     */
    public function setEnabledForGuestCheckout($enabledForGuestCheckout)
    {
        $this->container['enabledForGuestCheckout'] = $enabledForGuestCheckout;

        return $this;
    }

    /**
     * Gets energyEfficiencyClass
     *
     * @return string|null
     */
    public function getEnergyEfficiencyClass()
    {
        return $this->container['energyEfficiencyClass'];
    }

    /**
     * Sets energyEfficiencyClass
     *
     * @param string|null $energyEfficiencyClass This indicates the <a href=\"https://en.wikipedia.org/wiki/European_Union_energy_label\">European energy efficiency</a> rating (EEK) of the item. This field is returned only if the seller specified the energy efficiency rating. <br /><br />The rating is a set of energy efficiency classes from A to G, where 'A' is the most energy efficient and 'G' is the least efficient. This rating helps buyers choose between various models. <br /><br />When the manufacturer's specifications for this item are available, the link to this information is returned in the <b> productFicheWebUrl</b> field.
     *
     * @return self
     */
    public function setEnergyEfficiencyClass($energyEfficiencyClass)
    {
        $this->container['energyEfficiencyClass'] = $energyEfficiencyClass;

        return $this;
    }

    /**
     * Gets epid
     *
     * @return string|null
     */
    public function getEpid()
    {
        return $this->container['epid'];
    }

    /**
     * Sets epid
     *
     * @param string|null $epid An EPID is the eBay product identifier of a product from the eBay product catalog.  This indicates the product in which the item belongs.
     *
     * @return self
     */
    public function setEpid($epid)
    {
        $this->container['epid'] = $epid;

        return $this;
    }

    /**
     * Gets estimatedAvailabilities
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\EstimatedAvailability[]|null
     */
    public function getEstimatedAvailabilities()
    {
        return $this->container['estimatedAvailabilities'];
    }

    /**
     * Sets estimatedAvailabilities
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\EstimatedAvailability[]|null $estimatedAvailabilities The estimated number of this item that are available for purchase. Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. So instead of returning quantity, the estimated availability of the item is returned.
     *
     * @return self
     */
    public function setEstimatedAvailabilities($estimatedAvailabilities)
    {
        $this->container['estimatedAvailabilities'] = $estimatedAvailabilities;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string|null
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string|null $gender (Primary Item Aspect) The gender for the item. This is used for items that could vary by gender, such as clothing. For example: male, female, or unisex. All the item aspects, including this aspect, are returned in the <b> localizedAspects</b> container.
     *
     * @return self
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets gtin
     *
     * @return string|null
     */
    public function getGtin()
    {
        return $this->container['gtin'];
    }

    /**
     * Sets gtin
     *
     * @param string|null $gtin The unique Global Trade Item number of the item as defined by <a href=\"https://www.gtin.info\" target=\"_blank\">https://www.gtin.info</a>. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value.
     *
     * @return self
     */
    public function setGtin($gtin)
    {
        $this->container['gtin'] = $gtin;

        return $this;
    }

    /**
     * Gets image
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\Image|null
     */
    public function getImage()
    {
        return $this->container['image'];
    }

    /**
     * Sets image
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\Image|null $image image
     *
     * @return self
     */
    public function setImage($image)
    {
        $this->container['image'] = $image;

        return $this;
    }

    /**
     * Gets inferredEpid
     *
     * @return string|null
     */
    public function getInferredEpid()
    {
        return $this->container['inferredEpid'];
    }

    /**
     * Sets inferredEpid
     *
     * @param string|null $inferredEpid The ePID (eBay Product ID of a product from the eBay product catalog) for the item, which has been programmatically determined by eBay using the item's title, aspects, and other data. <br /><br />If the seller provided an ePID for the item, the seller's value is returned in the <b> epid</b> field. <br /><br /><span class=\"tablenote\"><b> Note: </b> This field is returned only for authorized Partners.</span>
     *
     * @return self
     */
    public function setInferredEpid($inferredEpid)
    {
        $this->container['inferredEpid'] = $inferredEpid;

        return $this;
    }

    /**
     * Gets itemAffiliateWebUrl
     *
     * @return string|null
     */
    public function getItemAffiliateWebUrl()
    {
        return $this->container['itemAffiliateWebUrl'];
    }

    /**
     * Sets itemAffiliateWebUrl
     *
     * @param string|null $itemAffiliateWebUrl The URL of the View Item page of the item, which includes the affiliate tracking ID. This field is only returned if the eBay partner enables affiliate tracking for the item by including the  <a href=\"/api-docs/buy/static/api-browse.html#Headers\"><code>X-EBAY-C-ENDUSERCTX</code></a> request header in the method.  <br /> <br /><span class=\"tablenote\"><b>Note: </b> eBay Partner Network, in order to be commissioned for your sales, you must use this URL to forward your buyer to the ebay.com site. </span>
     *
     * @return self
     */
    public function setItemAffiliateWebUrl($itemAffiliateWebUrl)
    {
        $this->container['itemAffiliateWebUrl'] = $itemAffiliateWebUrl;

        return $this;
    }

    /**
     * Gets itemEndDate
     *
     * @return string|null
     */
    public function getItemEndDate()
    {
        return $this->container['itemEndDate'];
    }

    /**
     * Sets itemEndDate
     *
     * @param string|null $itemEndDate This timestamp indicates the date and time up to which the item can be purchased.  This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer.<br /><br /><span class=\"tablenote\"><b> Note: </b>This field is only returned for auction listings.</span>
     *
     * @return self
     */
    public function setItemEndDate($itemEndDate)
    {
        $this->container['itemEndDate'] = $itemEndDate;

        return $this;
    }

    /**
     * Gets itemId
     *
     * @return string|null
     */
    public function getItemId()
    {
        return $this->container['itemId'];
    }

    /**
     * Sets itemId
     *
     * @param string|null $itemId The unique RESTful identifier of the item.
     *
     * @return self
     */
    public function setItemId($itemId)
    {
        $this->container['itemId'] = $itemId;

        return $this;
    }

    /**
     * Gets itemLocation
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\Address|null
     */
    public function getItemLocation()
    {
        return $this->container['itemLocation'];
    }

    /**
     * Sets itemLocation
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\Address|null $itemLocation itemLocation
     *
     * @return self
     */
    public function setItemLocation($itemLocation)
    {
        $this->container['itemLocation'] = $itemLocation;

        return $this;
    }

    /**
     * Gets itemWebUrl
     *
     * @return string|null
     */
    public function getItemWebUrl()
    {
        return $this->container['itemWebUrl'];
    }

    /**
     * Sets itemWebUrl
     *
     * @param string|null $itemWebUrl The URL of the View Item page of the item. This enables you to include a \"Report Item on eBay\" link that takes the buyer to the View Item page on eBay. From there they can report any issues regarding this item to eBay.
     *
     * @return self
     */
    public function setItemWebUrl($itemWebUrl)
    {
        $this->container['itemWebUrl'] = $itemWebUrl;

        return $this;
    }

    /**
     * Gets legacyItemId
     *
     * @return string|null
     */
    public function getLegacyItemId()
    {
        return $this->container['legacyItemId'];
    }

    /**
     * Sets legacyItemId
     *
     * @param string|null $legacyItemId The unique identifier of the eBay listing that contains the item. This is the traditional/legacy ID that is often seen in the URL of the listing View Item page.
     *
     * @return self
     */
    public function setLegacyItemId($legacyItemId)
    {
        $this->container['legacyItemId'] = $legacyItemId;

        return $this;
    }

    /**
     * Gets localizedAspects
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\TypedNameValue[]|null
     */
    public function getLocalizedAspects()
    {
        return $this->container['localizedAspects'];
    }

    /**
     * Sets localizedAspects
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\TypedNameValue[]|null $localizedAspects An array of containers that show the complete list of the aspect name/value pairs that describe the variation of the item.
     *
     * @return self
     */
    public function setLocalizedAspects($localizedAspects)
    {
        $this->container['localizedAspects'] = $localizedAspects;

        return $this;
    }

    /**
     * Gets lotSize
     *
     * @return int|null
     */
    public function getLotSize()
    {
        return $this->container['lotSize'];
    }

    /**
     * Sets lotSize
     *
     * @param int|null $lotSize The number of items in a lot. In other words, a lot size is the number of items that are being sold together.  <br /><br />A lot is a set of two or more items included in a single listing that must be purchased together in a single order line item. All the items in the lot are the same but there can be multiple items in a single lot,  such as the package of batteries shown in the example below.   <br /><br /><table border=\"1\"> <tr> <tr>  <th>Item</th>  <th>Lot Definition</th> <th>Lot Size</th></tr>  <tr>  <td>A package of 24 AA batteries</td>  <td>A box of 10 packages</td>  <td>10  </td> </tr>  <tr>  <td>A P235/75-15 Goodyear tire </td>  <td>4 tires  </td>  <td>4  </td> </tr> <tr> <td>Fashion Jewelry Rings  </td> <td>Package of 100 assorted rings  </td> <td>100 </td> </tr></table>  <br /><br /><span class=\"tablenote\"><b>Note: </b>  Lots are not supported in all categories.  </span>
     *
     * @return self
     */
    public function setLotSize($lotSize)
    {
        $this->container['lotSize'] = $lotSize;

        return $this;
    }

    /**
     * Gets marketingPrice
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\MarketingPrice|null
     */
    public function getMarketingPrice()
    {
        return $this->container['marketingPrice'];
    }

    /**
     * Sets marketingPrice
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\MarketingPrice|null $marketingPrice marketingPrice
     *
     * @return self
     */
    public function setMarketingPrice($marketingPrice)
    {
        $this->container['marketingPrice'] = $marketingPrice;

        return $this;
    }

    /**
     * Gets material
     *
     * @return string|null
     */
    public function getMaterial()
    {
        return $this->container['material'];
    }

    /**
     * Sets material
     *
     * @param string|null $material (Primary Item Aspect) Text describing what the item is made of. For example, silk. All the item aspects, including this aspect, are returned in the <b> localizedAspects</b> container.
     *
     * @return self
     */
    public function setMaterial($material)
    {
        $this->container['material'] = $material;

        return $this;
    }

    /**
     * Gets minimumPriceToBid
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null
     */
    public function getMinimumPriceToBid()
    {
        return $this->container['minimumPriceToBid'];
    }

    /**
     * Sets minimumPriceToBid
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null $minimumPriceToBid minimumPriceToBid
     *
     * @return self
     */
    public function setMinimumPriceToBid($minimumPriceToBid)
    {
        $this->container['minimumPriceToBid'] = $minimumPriceToBid;

        return $this;
    }

    /**
     * Gets mpn
     *
     * @return string|null
     */
    public function getMpn()
    {
        return $this->container['mpn'];
    }

    /**
     * Sets mpn
     *
     * @param string|null $mpn The manufacturer's part number, which is a unique number that identifies a specific product. To identify the product, this is always used along with brand.
     *
     * @return self
     */
    public function setMpn($mpn)
    {
        $this->container['mpn'] = $mpn;

        return $this;
    }

    /**
     * Gets pattern
     *
     * @return string|null
     */
    public function getPattern()
    {
        return $this->container['pattern'];
    }

    /**
     * Sets pattern
     *
     * @param string|null $pattern (Primary Item Aspect) Text describing the pattern used on the item. For example, paisley. All the item aspects, including this aspect, are returned in the <b> localizedAspects</b> container.
     *
     * @return self
     */
    public function setPattern($pattern)
    {
        $this->container['pattern'] = $pattern;

        return $this;
    }

    /**
     * Gets paymentMethods
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\PaymentMethod[]|null
     */
    public function getPaymentMethods()
    {
        return $this->container['paymentMethods'];
    }

    /**
     * Sets paymentMethods
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\PaymentMethod[]|null $paymentMethods The payment methods for the item, including the payment method types, brands, and instructions for the buyer.
     *
     * @return self
     */
    public function setPaymentMethods($paymentMethods)
    {
        $this->container['paymentMethods'] = $paymentMethods;

        return $this;
    }

    /**
     * Gets price
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null $price price
     *
     * @return self
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets priceDisplayCondition
     *
     * @return string|null
     */
    public function getPriceDisplayCondition()
    {
        return $this->container['priceDisplayCondition'];
    }

    /**
     * Sets priceDisplayCondition
     *
     * @param string|null $priceDisplayCondition Indicates when in the buying flow the item's price can appear for minimum advertised price (MAP) items, which is the lowest price a retailer can advertise/show for this item. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:PriceDisplayConditionEnum'>eBay API documentation</a>
     *
     * @return self
     */
    public function setPriceDisplayCondition($priceDisplayCondition)
    {
        $this->container['priceDisplayCondition'] = $priceDisplayCondition;

        return $this;
    }

    /**
     * Gets primaryItemGroup
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ItemGroupSummary|null
     */
    public function getPrimaryItemGroup()
    {
        return $this->container['primaryItemGroup'];
    }

    /**
     * Sets primaryItemGroup
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ItemGroupSummary|null $primaryItemGroup primaryItemGroup
     *
     * @return self
     */
    public function setPrimaryItemGroup($primaryItemGroup)
    {
        $this->container['primaryItemGroup'] = $primaryItemGroup;

        return $this;
    }

    /**
     * Gets primaryProductReviewRating
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ReviewRating|null
     */
    public function getPrimaryProductReviewRating()
    {
        return $this->container['primaryProductReviewRating'];
    }

    /**
     * Sets primaryProductReviewRating
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ReviewRating|null $primaryProductReviewRating primaryProductReviewRating
     *
     * @return self
     */
    public function setPrimaryProductReviewRating($primaryProductReviewRating)
    {
        $this->container['primaryProductReviewRating'] = $primaryProductReviewRating;

        return $this;
    }

    /**
     * Gets priorityListing
     *
     * @return bool|null
     */
    public function getPriorityListing()
    {
        return $this->container['priorityListing'];
    }

    /**
     * Sets priorityListing
     *
     * @param bool|null $priorityListing This field is returned as <code>true</code> if the listing is part of a Promoted Listing campaign. Promoted Listings are available to Above Standard and Top Rated sellers with recent sales activity.<br /><br />For more information, see <a href=\"https://pages.ebay.com/seller-center/listing-and-marketing/promoted-listings.html\" target=\"_blank\">Promoted Listings</a>.
     *
     * @return self
     */
    public function setPriorityListing($priorityListing)
    {
        $this->container['priorityListing'] = $priorityListing;

        return $this;
    }

    /**
     * Gets product
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\Product|null
     */
    public function getProduct()
    {
        return $this->container['product'];
    }

    /**
     * Sets product
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\Product|null $product product
     *
     * @return self
     */
    public function setProduct($product)
    {
        $this->container['product'] = $product;

        return $this;
    }

    /**
     * Gets productFicheWebUrl
     *
     * @return string|null
     */
    public function getProductFicheWebUrl()
    {
        return $this->container['productFicheWebUrl'];
    }

    /**
     * Sets productFicheWebUrl
     *
     * @param string|null $productFicheWebUrl The URL of a page containing the manufacturer's specification of this item, which helps buyers make a purchasing decision. This information is available only for items that include the European energy efficiency rating (EEK) but is not available for <em> all</em> items with an EEK rating and is returned only if this information is available. The EEK rating of the item is returned in the <b> energyEfficiencyClass</b> field.
     *
     * @return self
     */
    public function setProductFicheWebUrl($productFicheWebUrl)
    {
        $this->container['productFicheWebUrl'] = $productFicheWebUrl;

        return $this;
    }

    /**
     * Gets qualifiedPrograms
     *
     * @return string[]|null
     */
    public function getQualifiedPrograms()
    {
        return $this->container['qualifiedPrograms'];
    }

    /**
     * Sets qualifiedPrograms
     *
     * @param string[]|null $qualifiedPrograms An array of the qualified programs available for the item, such as EBAY_PLUS, AUTHENTICITY_GUARANTEE, and AUTHENTICITY_VERIFICATION.<br /><br />eBay Plus is a premium account option for buyers, which provides benefits such as fast free domestic shipping and free returns on selected items. Top-Rated eBay sellers must opt in to eBay Plus to be able to offer the program on qualifying listings. Sellers must commit to next-day delivery of those items.<br /><br /><span class=\"tablenote\"><b>Note: </b> eBay Plus is available only to buyers in Germany, Austria, and Australia marketplaces.</span><br /><br />The eBay <a href=\"https://pages.ebay.com/authenticity-guarantee/\" target=\"_blank\">Authenticity Guarantee</a> program enables third-party authenticators to perform authentication verification inspections on items such as watches and sneakers.
     *
     * @return self
     */
    public function setQualifiedPrograms($qualifiedPrograms)
    {
        $this->container['qualifiedPrograms'] = $qualifiedPrograms;

        return $this;
    }

    /**
     * Gets quantityLimitPerBuyer
     *
     * @return int|null
     */
    public function getQuantityLimitPerBuyer()
    {
        return $this->container['quantityLimitPerBuyer'];
    }

    /**
     * Sets quantityLimitPerBuyer
     *
     * @param int|null $quantityLimitPerBuyer The maximum number for a specific item that one buyer can purchase.
     *
     * @return self
     */
    public function setQuantityLimitPerBuyer($quantityLimitPerBuyer)
    {
        $this->container['quantityLimitPerBuyer'] = $quantityLimitPerBuyer;

        return $this;
    }

    /**
     * Gets reservePriceMet
     *
     * @return bool|null
     */
    public function getReservePriceMet()
    {
        return $this->container['reservePriceMet'];
    }

    /**
     * Sets reservePriceMet
     *
     * @param bool|null $reservePriceMet This indicates if the reserve price of the item has been met. A reserve price is set by the seller and is the minimum amount the seller is willing to sell the item for. <p>If the highest bid is not equal to or higher than the reserve price when the auction ends, the listing ends and the item is not sold.</p> <p><b> Note: </b>This is returned only for auctions that have a reserve price.</p>
     *
     * @return self
     */
    public function setReservePriceMet($reservePriceMet)
    {
        $this->container['reservePriceMet'] = $reservePriceMet;

        return $this;
    }

    /**
     * Gets returnTerms
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ItemReturnTerms|null
     */
    public function getReturnTerms()
    {
        return $this->container['returnTerms'];
    }

    /**
     * Sets returnTerms
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ItemReturnTerms|null $returnTerms returnTerms
     *
     * @return self
     */
    public function setReturnTerms($returnTerms)
    {
        $this->container['returnTerms'] = $returnTerms;

        return $this;
    }

    /**
     * Gets seller
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\SellerDetail|null
     */
    public function getSeller()
    {
        return $this->container['seller'];
    }

    /**
     * Sets seller
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\SellerDetail|null $seller seller
     *
     * @return self
     */
    public function setSeller($seller)
    {
        $this->container['seller'] = $seller;

        return $this;
    }

    /**
     * Gets sellerCustomPolicies
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\SellerCustomPolicy[]|null
     */
    public function getSellerCustomPolicies()
    {
        return $this->container['sellerCustomPolicies'];
    }

    /**
     * Sets sellerCustomPolicies
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\SellerCustomPolicy[]|null $sellerCustomPolicies A list of the custom policies that are applied to a listing.
     *
     * @return self
     */
    public function setSellerCustomPolicies($sellerCustomPolicies)
    {
        $this->container['sellerCustomPolicies'] = $sellerCustomPolicies;

        return $this;
    }

    /**
     * Gets sellerItemRevision
     *
     * @return string|null
     */
    public function getSellerItemRevision()
    {
        return $this->container['sellerItemRevision'];
    }

    /**
     * Sets sellerItemRevision
     *
     * @param string|null $sellerItemRevision An identifier generated/incremented when a seller revises the item. There are two types of item revisions: <ul><li>Seller changes, such as changing the title</li>  <li>eBay system changes, such as changing the quantity when an item is purchased</li></ul> This ID is changed <em> only</em> when the seller makes a change to the item. This means you cannot use this value to determine if the quantity has changed.
     *
     * @return self
     */
    public function setSellerItemRevision($sellerItemRevision)
    {
        $this->container['sellerItemRevision'] = $sellerItemRevision;

        return $this;
    }

    /**
     * Gets shippingOptions
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ShippingOption[]|null
     */
    public function getShippingOptions()
    {
        return $this->container['shippingOptions'];
    }

    /**
     * Sets shippingOptions
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ShippingOption[]|null $shippingOptions An array of shipping options containers that have the details about cost, carrier, etc. of one shipping option.
     *
     * @return self
     */
    public function setShippingOptions($shippingOptions)
    {
        $this->container['shippingOptions'] = $shippingOptions;

        return $this;
    }

    /**
     * Gets shipToLocations
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ShipToLocations|null
     */
    public function getShipToLocations()
    {
        return $this->container['shipToLocations'];
    }

    /**
     * Sets shipToLocations
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ShipToLocations|null $shipToLocations shipToLocations
     *
     * @return self
     */
    public function setShipToLocations($shipToLocations)
    {
        $this->container['shipToLocations'] = $shipToLocations;

        return $this;
    }

    /**
     * Gets shortDescription
     *
     * @return string|null
     */
    public function getShortDescription()
    {
        return $this->container['shortDescription'];
    }

    /**
     * Sets shortDescription
     *
     * @param string|null $shortDescription This text string is derived from the item condition and the item aspects (such as size, color, capacity, model, brand, etc.).
     *
     * @return self
     */
    public function setShortDescription($shortDescription)
    {
        $this->container['shortDescription'] = $shortDescription;

        return $this;
    }

    /**
     * Gets size
     *
     * @return string|null
     */
    public function getSize()
    {
        return $this->container['size'];
    }

    /**
     * Sets size
     *
     * @param string|null $size (Primary Item Aspect) The size of the item. For example, '7' for a size 7 shoe. All the item aspects, including this aspect, are returned in the <b> localizedAspects</b> container.
     *
     * @return self
     */
    public function setSize($size)
    {
        $this->container['size'] = $size;

        return $this;
    }

    /**
     * Gets sizeSystem
     *
     * @return string|null
     */
    public function getSizeSystem()
    {
        return $this->container['sizeSystem'];
    }

    /**
     * Sets sizeSystem
     *
     * @param string|null $sizeSystem (Primary Item Aspect) The sizing system of the country.  All the item aspects, including this aspect, are returned in the <b> localizedAspects</b> container. <br /><br /><b> Valid Values: </b> <br />AU (Australia),  <br />BR (Brazil), <br />CN (China),  <br />DE (Germany),  <br />EU (European Union),  <br /> FR (France), <br /> IT (Italy),  <br />JP (Japan), <br />MX (Mexico),  <br />US (USA), <br /> UK (United Kingdom) <br /><br />Code so that your app gracefully handles any future changes to this list.
     *
     * @return self
     */
    public function setSizeSystem($sizeSystem)
    {
        $this->container['sizeSystem'] = $sizeSystem;

        return $this;
    }

    /**
     * Gets sizeType
     *
     * @return string|null
     */
    public function getSizeType()
    {
        return $this->container['sizeType'];
    }

    /**
     * Sets sizeType
     *
     * @param string|null $sizeType (Primary Item Aspect) Text describing a size group in which the item would be included, such as regular, petite, plus, big-and-tall or maternity. All the item aspects, including this aspect, are returned in the <b> localizedAspects</b> container.
     *
     * @return self
     */
    public function setSizeType($sizeType)
    {
        $this->container['sizeType'] = $sizeType;

        return $this;
    }

    /**
     * Gets subtitle
     *
     * @return string|null
     */
    public function getSubtitle()
    {
        return $this->container['subtitle'];
    }

    /**
     * Sets subtitle
     *
     * @param string|null $subtitle A subtitle is optional and allows the seller to provide more information about the product, possibly including keywords that may assist with search results.
     *
     * @return self
     */
    public function setSubtitle($subtitle)
    {
        $this->container['subtitle'] = $subtitle;

        return $this;
    }

    /**
     * Gets taxes
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\Taxes[]|null
     */
    public function getTaxes()
    {
        return $this->container['taxes'];
    }

    /**
     * Sets taxes
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\Taxes[]|null $taxes The container for the tax information for the item.
     *
     * @return self
     */
    public function setTaxes($taxes)
    {
        $this->container['taxes'] = $taxes;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string|null $title The seller-created title of the item. <br><br><b> Maximum Length: </b> 80 characters
     *
     * @return self
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets topRatedBuyingExperience
     *
     * @return bool|null
     */
    public function getTopRatedBuyingExperience()
    {
        return $this->container['topRatedBuyingExperience'];
    }

    /**
     * Sets topRatedBuyingExperience
     *
     * @param bool|null $topRatedBuyingExperience This indicates if the item a top-rated plus item. There are three benefits of a top-rated plus item; a  minimum 30-day money-back return policy, shipping the items in 1 business day with tracking provided, and the added comfort of knowing this item is from experienced sellers with the highest buyer ratings. See the <a href=\"https://pages.ebay.com/topratedplus/index.html\" target=\"_blank\">Top Rated Plus Items </a> and  <a href=\"https://pages.ebay.com/help/sell/top-rated.html target=\"_blank\">Becoming a Top Rated Seller and qualifying for Top Rated Plus</a> help topics for more information.
     *
     * @return self
     */
    public function setTopRatedBuyingExperience($topRatedBuyingExperience)
    {
        $this->container['topRatedBuyingExperience'] = $topRatedBuyingExperience;

        return $this;
    }

    /**
     * Gets tyreLabelImageUrl
     *
     * @return string|null
     */
    public function getTyreLabelImageUrl()
    {
        return $this->container['tyreLabelImageUrl'];
    }

    /**
     * Sets tyreLabelImageUrl
     *
     * @param string|null $tyreLabelImageUrl The URL to the image that shows the information on the tyre label.
     *
     * @return self
     */
    public function setTyreLabelImageUrl($tyreLabelImageUrl)
    {
        $this->container['tyreLabelImageUrl'] = $tyreLabelImageUrl;

        return $this;
    }

    /**
     * Gets uniqueBidderCount
     *
     * @return int|null
     */
    public function getUniqueBidderCount()
    {
        return $this->container['uniqueBidderCount'];
    }

    /**
     * Sets uniqueBidderCount
     *
     * @param int|null $uniqueBidderCount This integer value indicates the number of different eBay users who have placed one or more bids on an auction item. This field is only applicable to auction items.
     *
     * @return self
     */
    public function setUniqueBidderCount($uniqueBidderCount)
    {
        $this->container['uniqueBidderCount'] = $uniqueBidderCount;

        return $this;
    }

    /**
     * Gets unitPrice
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null
     */
    public function getUnitPrice()
    {
        return $this->container['unitPrice'];
    }

    /**
     * Sets unitPrice
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null $unitPrice unitPrice
     *
     * @return self
     */
    public function setUnitPrice($unitPrice)
    {
        $this->container['unitPrice'] = $unitPrice;

        return $this;
    }

    /**
     * Gets unitPricingMeasure
     *
     * @return string|null
     */
    public function getUnitPricingMeasure()
    {
        return $this->container['unitPricingMeasure'];
    }

    /**
     * Sets unitPricingMeasure
     *
     * @param string|null $unitPricingMeasure The designation, such as size, weight, volume, count, etc., that was used to specify the quantity of the item.  This helps buyers compare prices. <br /><br />For example, the following tells the buyer that the item is 7.99 per 100 grams. <br /><br /><code>\"unitPricingMeasure\": \"100g\",<br /> \"unitPrice\": {<br />&nbsp;&nbsp;\"value\": \"7.99\",<br />&nbsp;&nbsp;\"currency\": \"GBP\"</code>
     *
     * @return self
     */
    public function setUnitPricingMeasure($unitPricingMeasure)
    {
        $this->container['unitPricingMeasure'] = $unitPricingMeasure;

        return $this;
    }

    /**
     * Gets warnings
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\Error[]|null
     */
    public function getWarnings()
    {
        return $this->container['warnings'];
    }

    /**
     * Sets warnings
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\Error[]|null $warnings An array of warning messages. These types of errors do not prevent the method from executing but should be checked.
     *
     * @return self
     */
    public function setWarnings($warnings)
    {
        $this->container['warnings'] = $warnings;

        return $this;
    }

    /**
     * Gets watchCount
     *
     * @return int|null
     */
    public function getWatchCount()
    {
        return $this->container['watchCount'];
    }

    /**
     * Sets watchCount
     *
     * @param int|null $watchCount The number of users that have added the item to their watch list.<br /><br /><span class=\"tablenote\"> <strong>Note:</strong> This field is restricted to applications that have been granted permission to access this feature. You must submit an <a href=\"https://developer.ebay.com/my/support/tickets?tab=app-check\">App Check ticket</a> to request this access. In the App Check form, add a note to the <b>Application Title/Summary</b> and/or <b>Application Details</b> fields that you want access to Watch Count data in the Browse API.</span>
     *
     * @return self
     */
    public function setWatchCount($watchCount)
    {
        $this->container['watchCount'] = $watchCount;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


